source: https://www.ibm.com/developerworks/cloud/library/cl-ibm-blockchain-101-quick-start-guide-for-developers-bluemix-trs/index.html#step2

1. Install docker for mac
2. Pull hyper ledger fabric using docker:
docker pull hyperledger/fabric-peer:latest
docker pull hyperledger/fabric-membersrvc:latest

>>docker images [to see list of repo]

source: https://developer.ibm.com/opentech/2016/06/27/running-hyperledger-fabric-natively-on-mac/

3. In documents, hyper ledger,

using docker compose: create “docker-compose.yml”:
vp0:
  image: hyperledger/fabric-peer
  ports:
    - "7050:7050"
    - "7051:7051"
    - "7052:7052"
  environment:
    - CORE_PEER_ADDRESSAUTODETECT=true
    - CORE_VM_ENDPOINT=unix:///var/run/docker.sock
    - CORE_LOGGING_LEVEL=DEBUG
  command: peer node start

or

vp0:
  image: hyperledger/fabric-peer
  environment:
    - CORE_PEER_ID=vp0
    - CORE_PEER_ADDRESSAUTODETECT=true
    - CORE_VM_ENDPOINT=http://172.17.0.1:2375
    - CORE_LOGGING_LEVEL=DEBUG
  command: peer node start



using vagrant: 
run the following command to run a peer:

docker run --rm -it -e CORE_VM_ENDPOINT=http://172.17.0.1:2375 -e CORE_PEER_ID=vp0 -e CORE_PEER_ADDRESSAUTODETECT=true hyperledger/fabric-peer peer node start

In native mac,
core_vm_endpoint=unix:///var/run/docker.sock

O/p:
TEJALs-MacBook-Pro:hyperledgertrial tejalsatish$ docker run --rm -it -e CORE_VM_ENDPOINT=unix:///var/run/docker.sock -e CORE_PEER_ID=vp0 -e CORE_PEER_ADDRESSAUTODETECT=true hyperledger/fabric-peer peer node start
07:25:13.520 [peer] func1 -> INFO 001 Auto detected peer address: 172.17.0.2:7051
07:25:13.521 [peer] func1 -> INFO 002 Auto detected peer address: 172.17.0.2:7051
07:25:13.525 [nodeCmd] serve -> INFO 003 Security enabled status: false
07:25:13.525 [eventhub_producer] start -> INFO 004 event processor started
07:25:13.525 [nodeCmd] serve -> INFO 005 Privacy enabled status: false
07:25:13.527 [db] open -> INFO 006 Setting rocksdb maxLogFileSize to 10485760
07:25:13.528 [db] open -> INFO 007 Setting rocksdb keepLogFileNum to 10
07:25:13.813 [chaincode] NewChaincodeSupport -> INFO 008 Chaincode support using peerAddress: 172.17.0.2:7051
07:25:13.815 [sysccapi] RegisterSysCC -> INFO 009 system chaincode (noop,github.com/hyperledger/fabric/bddtests/syschaincode/noop) disabled
07:25:13.816 [state] loadConfig -> INFO 00a Loading configurations...
07:25:13.817 [state] loadConfig -> INFO 00b Configurations loaded. stateImplName=[buckettree], stateImplConfigs=map[maxGroupingAtEachLevel:%!s(int=5) bucketCacheSize:%!s(int=100) numBuckets:%!s(int=1000003)], deltaHistorySize=[500]
07:25:13.817 [state] NewState -> INFO 00c Initializing state implementation [buckettree]
07:25:13.817 [buckettree] initConfig -> INFO 00d configs passed during initialization = map[string]interface {}{"numBuckets":1000003, "maxGroupingAtEachLevel":5, "bucketCacheSize":100}
07:25:13.818 [buckettree] initConfig -> INFO 00e Initializing bucket tree state implemetation with configurations &{maxGroupingAtEachLevel:5 lowestLevel:9 levelToNumBucketsMap:map[3:65 2:13 7:40001 6:8001 8:200001 1:3 0:1 4:321 9:1000003 5:1601] hashFunc:0xab4dc0}
07:25:13.819 [buckettree] newBucketCache -> INFO 00f Constructing bucket-cache with max bucket cache size = [100] MBs
07:25:13.819 [buckettree] loadAllBucketNodesFromDB -> INFO 010 Loaded buckets data in cache. Total buckets in DB = [0]. Total cache size:=0
07:25:13.819 [genesis] func1 -> INFO 011 Creating genesis block.
07:25:13.823 [consensus/controller] NewConsenter -> INFO 012 Creating default consensus plugin (noops)
07:25:13.824 [consensus/noops] newNoops -> INFO 013 NOOPS consensus type = *noops.Noops
07:25:13.824 [consensus/noops] newNoops -> INFO 014 NOOPS block size = 500
07:25:13.824 [consensus/noops] newNoops -> INFO 015 NOOPS block wait = 1s
07:25:13.825 [rest] StartOpenchainRESTServer -> INFO 017 Initializing the REST service on 0.0.0.0:7050, TLS is disabled.
07:25:13.825 [nodeCmd] serve -> INFO 018 Starting peer with ID=name:"vp0" , network ID=dev, address=172.17.0.2:7051, rootnodes=, validator=true
07:25:13.824 [consensus/statetransfer] blockThread -> INFO 016 Validated blockchain to the genesis block


[or]

source: http://hyperledger-fabric.readthedocs.io/en/latest/Setup/Chaincode-setup/

*API : http://hyperledger-fabric.readthedocs.io/en/v0.6/API/CoreAPI/

export GOPATH=/Users/tejalsatish/Documents/hyperledgertrial/

mkdir -p $GOPATH/src/github.com/chaincode_example02/
cd $GOPATH/src/github.com/chaincode_example02
curl --request GET https://raw.githubusercontent.com/hyperledger/fabric/master/examples/chaincode/go/chaincode_example02/chaincode_example02.go > chaincode_example02.go

mkdir -p $GOPATH/src/github.com/hyperledger
cd $GOPATH/src/github.com/hyperledger
git clone http://gerrit.hyperledger.org/r/fabric

cd $GOPATH/src/github.com/chaincode_example02
go build

Terminal 1:

CORE_CHAINCODE_ID_NAME=mycc CORE_PEER_ADDRESS=0.0.0.0:7051 ./chaincode_example02

Terminal 2:

docker-compose up [from hyperledger folder]

O/P:  14:58:34.203 [shim] DEBU : Received REGISTERED, ready for invocations

Terminal 3:

[default REST port:7050]
cd $GOPATH/src/github.com/hyperledger/fabric/peer
