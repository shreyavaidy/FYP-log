{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fmodern\fcharset0 CourierNewPSMT;\f2\fnil\fcharset0 Menlo-Regular;
\f3\fnil\fcharset0 HelveticaNeue;\f4\fnil\fcharset0 AndaleMono;\f5\fnil\fcharset0 Menlo-Bold;
}
{\colortbl;\red255\green255\blue255;\red38\green38\blue38;\red245\green245\blue245;\red50\green98\blue178;
\red14\green110\blue109;\red135\green136\blue117;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 source: {\field{\*\fldinst{HYPERLINK "https://www.ibm.com/developerworks/cloud/library/cl-ibm-blockchain-101-quick-start-guide-for-developers-bluemix-trs/index.html#step2"}}{\fldrslt https://www.ibm.com/developerworks/cloud/library/cl-ibm-blockchain-101-quick-start-guide-for-developers-bluemix-trs/index.html#step2}}\
\
1. Install docker for mac\
2. Pull hyper ledger fabric using docker:\
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs32 \cf0 \expnd0\expndtw0\kerning0
docker pull hyperledger/fabric-peer:latest\
docker pull hyperledger/fabric-membersrvc:latest\
\
>>docker images [to see list of repo]\
\
source: {\field{\*\fldinst{HYPERLINK "https://developer.ibm.com/opentech/2016/06/27/running-hyperledger-fabric-natively-on-mac/"}}{\fldrslt https://developer.ibm.com/opentech/2016/06/27/running-hyperledger-fabric-natively-on-mac/}}\
\
3. In documents, hyper ledger,\
\
using docker compose: create \'93docker-compose.yml\'94:\
\pard\pardeftab720\sl380\partightenfactor0

\f2\fs28 \cf2 \cb3 vp0:\
  image: hyperledger/fabric-peer\
  ports:\
    - "7050:7050"\
    - "7051:7051"\
    - "7052:7052"\
  environment:\
    - CORE_PEER_ADDRESSAUTODETECT=true\
    - CORE_VM_ENDPOINT=unix:///var/run/docker.sock\
    - CORE_LOGGING_LEVEL=DEBUG\
  command: peer node start\
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs32 \cf0 \cb1 \
or\
\
\pard\pardeftab720\sl380\partightenfactor0

\f2\fs28 \cf2 \cb3 vp0:\
  image: hyperledger/fabric-peer\
  environment:\
    - CORE_PEER_ID=vp0\
    - CORE_PEER_ADDRESSAUTODETECT=true\
    - CORE_VM_ENDPOINT=http://172.17.0.1:2375\
    - CORE_LOGGING_LEVEL=DEBUG\
  command: peer node start\
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs32 \cf0 \cb1 \
\
\
using vagrant: \
run the following command to run a peer:\
\
\pard\pardeftab720\sl380\partightenfactor0

\f2\fs28 \cf2 \cb3 docker run --rm -it -e CORE_VM_ENDPOINT=http://172.17.0.1:2375 -e CORE_PEER_ID=vp0 -e CORE_PEER_ADDRESSAUTODETECT=true hyperledger/fabric-peer peer node start\
\pard\pardeftab720\sl300\partightenfactor0

\f3\b\fs30 \cf4 \cb1 \
In native mac,\
core_vm_endpoint=
\f2\b0\fs28 \cf2 \cb0 unix:///var/run/docker.sock\
\cb1 \
O/p:\cb0 \

\fs22 \cf0 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 TEJALs-MacBook-Pro:hyperledgertrial tejalsatish$ docker run --rm -it -e CORE_VM_ENDPOINT=unix:///var/run/docker.sock -e CORE_PEER_ID=vp0 -e CORE_PEER_ADDRESSAUTODETECT=true hyperledger/fabric-peer peer node start\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 07:25:13.520 [peer] func1 -> INFO 001 Auto detected peer address: 172.17.0.2:7051\
07:25:13.521 [peer] func1 -> INFO 002 Auto detected peer address: 172.17.0.2:7051\
07:25:13.525 [nodeCmd] serve -> INFO 003 Security enabled status: false\
07:25:13.525 [eventhub_producer] start -> INFO 004 event processor started\
07:25:13.525 [nodeCmd] serve -> INFO 005 Privacy enabled status: false\
07:25:13.527 [db] open -> INFO 006 Setting rocksdb maxLogFileSize to 10485760\
07:25:13.528 [db] open -> INFO 007 Setting rocksdb keepLogFileNum to 10\
07:25:13.813 [chaincode] NewChaincodeSupport -> INFO 008 Chaincode support using peerAddress: 172.17.0.2:7051\
07:25:13.815 [sysccapi] RegisterSysCC -> INFO 009 system chaincode (noop,github.com/hyperledger/fabric/bddtests/syschaincode/noop) disabled\
07:25:13.816 [state] loadConfig -> INFO 00a Loading configurations...\
07:25:13.817 [state] loadConfig -> INFO 00b Configurations loaded. stateImplName=[buckettree], stateImplConfigs=map[maxGroupingAtEachLevel:%!s(int=5) bucketCacheSize:%!s(int=100) numBuckets:%!s(int=1000003)], deltaHistorySize=[500]\
07:25:13.817 [state] NewState -> INFO 00c Initializing state implementation [buckettree]\
07:25:13.817 [buckettree] initConfig -> INFO 00d configs passed during initialization = map[string]interface \{\}\{"numBuckets":1000003, "maxGroupingAtEachLevel":5, "bucketCacheSize":100\}\
07:25:13.818 [buckettree] initConfig -> INFO 00e Initializing bucket tree state implemetation with configurations &\{maxGroupingAtEachLevel:5 lowestLevel:9 levelToNumBucketsMap:map[3:65 2:13 7:40001 6:8001 8:200001 1:3 0:1 4:321 9:1000003 5:1601] hashFunc:0xab4dc0\}\
07:25:13.819 [buckettree] newBucketCache -> INFO 00f Constructing bucket-cache with max bucket cache size = [100] MBs\
07:25:13.819 [buckettree] loadAllBucketNodesFromDB -> INFO 010 Loaded buckets data in cache. Total buckets in DB = [0]. Total cache size:=0\
07:25:13.819 [genesis] func1 -> INFO 011 Creating genesis block.\
07:25:13.823 [consensus/controller] NewConsenter -> INFO 012 Creating default consensus plugin (noops)\
07:25:13.824 [consensus/noops] newNoops -> INFO 013 NOOPS consensus type = *noops.Noops\
07:25:13.824 [consensus/noops] newNoops -> INFO 014 NOOPS block size = 500\
07:25:13.824 [consensus/noops] newNoops -> INFO 015 NOOPS block wait = 1s\
07:25:13.825 [rest] StartOpenchainRESTServer -> INFO 017 Initializing the REST service on 0.0.0.0:7050, TLS is disabled.\
07:25:13.825 [nodeCmd] serve -> INFO 018 Starting peer with ID=name:"vp0" , network ID=dev, address=172.17.0.2:7051, rootnodes=, validator=true\
07:25:13.824 [consensus/statetransfer] blockThread -> INFO 016 Validated blockchain to the genesis block\
\
\
[or]\
\
source: {\field{\*\fldinst{HYPERLINK "http://hyperledger-fabric.readthedocs.io/en/latest/Setup/Chaincode-setup/"}}{\fldrslt http://hyperledger-fabric.readthedocs.io/en/latest/Setup/Chaincode-setup/}}\
\
export GOPATH=/Users/tejalsatish/Documents/hyperledgertrial/\
\
mkdir -p $GOPATH/src/github.com/chaincode_example02/\
\pard\pardeftab720\sl240\partightenfactor0

\f4 \cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1 cd $GOPATH/src/github.com/chaincode_example02
\f2 \cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 \

\f4 \cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1 curl --request GET http\cf5 s:\cf2 //raw.githubusercontent.com/hyperledger/fabric/master/examples/chaincode/go/chaincode_example02/chaincode_example02.go > chaincode_example02.go\
\
mkdir -p $GOPATH/src/github.com/hyperledger\
cd $GOPATH/src/github.com/hyperledger\
git clone http:\cf6 //gerrit.hyperledger.org/r/fabric\cf2 \
\
cd $GOPATH/src/github.com/chaincode_example02\
go build\
\
Terminal 1:\
\
\pard\pardeftab720\sl240\partightenfactor0
\cf5 CORE_CHAINCODE_ID_NAME=\cf2 mycc \cf5 CORE_PEER_ADDRESS=0.0\cf2 .\cf5 0.0\cf2 :\cf5 7051\cf2  ./chaincode_example02
\f2 \cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\
\pard\pardeftab720\sl240\partightenfactor0

\f5\b \cf0 Terminal 2:
\f2\b0 \
\
docker-compose up [from hyperledger folder]\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 O/P:  14:58:34.203 [shim] DEBU : Received REGISTERED, ready for invocations\
\
Terminal 3:\
\
[default REST port:7050]\
\pard\pardeftab720\sl240\partightenfactor0

\f4 \cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1 cd $GOPATH/src/github.com/hyperledger/fabric/peer\
}